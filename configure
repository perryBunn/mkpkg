#! /usr/bin/bash
###############################################################################
# Name:         configure
# Description:  This is the configuration script for `mkpkg`, It will create
#               configuration files at ~/.config/mkpkg/. As well as ensure that
#               all needed dependencies are available to make any source files
#               that might need to be compiled.
# Author:       Perry Bunn
# Contact:      perry.bunn@noaa.gov
# Version:      v1.0
# History:      Original Copy
# TODO:         See repository for project TODO and contributing guide.
# License:      This Source Code Form is subject to the terms of the Mozilla
#               Public License, v. 2.0. If a copy of the MPL was not distributed
#               with this file, You can obtain one at
#               http://mozilla.org/MPL/2.0/.
###############################################################################

# Variables
CONFIG_DIR=~/.config/mkpkg
config_content='---
version: 1.0
args:
  pkg_templates:
    # NAME - Name of algorithm
    # CONTENT - Contents of file- CODE, DATA, DOCS, custom
    # DATE - Date in YYYYMMDD format
    # V - Algorithm Version
    # R - Algorithm Revision
    # H - Delivery hotfix revision
    &name_vrh_cont_date: "[NAME]_v[V]r[R]_deliv[H]_[CONTENT]_[DATE].tar.gz"
    &name_vrh_date:      "[NAME]_v[V]r[R]_deliv[H]_[DATE].tar.gz"
    &name_cont_date:     "[NAME]_[CONTENT]_[DATE].tar.gz"
    &name_vr_cont_date:  "[NAME]_v[V]r[R]_[CONTENT]_[DATE].tar.gz"
    &name_vr_date:       "[NAME]_v[V]r[R]_[DATE].tar.gz"
    &name_cont:          "[NAME]_[CONTENT].tar.gz"
    &name_vr_cont:       "[NAME]_v[V]r[R]_[CONTENT].tar.gz"
    &name_vr:            "[NAME]_v[V]r[R].tar.gz"

# Possible logging levels: DEBUG, INFO, WARNING, ERROR
file_level: DEBUG
stream_level: DEBUG
logging_dir: /var/log/mkpkg/

default_template: *name_cont_date
default_release_dir: ~/releases/@NAME/@VERSION/@REVISION/'


#######################################
# Checks existence of a directory
# Globals:
#   None
# Arguments:
#   Directory to check
#######################################
function verify_mkdir {
    if [[ ! -d $1 ]]; then
        echo "Could not make the directory $1"
        exit 1
    fi
}

#######################################
# Checks existence of a file
# Globals:
#   None
# Arguments:
#   File to check
#######################################
function verify_mkfile {
    if [[ ! -e $1 ]]; then
        echo "Could not verify that $1 exists."
        return 1
    fi
    return 0
}

function mkconfig {
    echo "Creating config.yaml"
    echo $config_content >> "$CONFIG_DIR/config.yaml"
}

# Make config_dir if it doesnt exist
if [[ ! -e $CONFIG_DIR ]]; then
    mkdir $CONFIG_DIR
    verify_mkdir $CONFIG_DIR
fi

# Create $CONFIG_DIR/config.yaml
if [[ ! -e "$CONFIG_DIR/config.yaml" ]]; then
    mkconfig
    verify_mkfile "$CONFIG_DIR/config.yaml"
else
    echo "Config already exists"
fi
